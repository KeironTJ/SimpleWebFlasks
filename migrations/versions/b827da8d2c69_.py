"""empty message

Revision ID: b827da8d2c69
Revises: 
Create Date: 2024-08-04 20:56:56.814492

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b827da8d2c69'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('building_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('building_type_name', sa.String(length=64), nullable=True),
    sa.Column('building_type_description', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventory_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inventory_type_name', sa.String(length=64), nullable=True),
    sa.Column('inventory_type_description', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(length=64), nullable=True),
    sa.Column('item_cost', sa.Integer(), nullable=True),
    sa.Column('item_xp', sa.Integer(), nullable=True),
    sa.Column('item_level', sa.Integer(), nullable=True),
    sa.Column('item_type', sa.String(length=64), nullable=True),
    sa.Column('item_description', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quest_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quest_type_name', sa.String(length=64), nullable=True),
    sa.Column('quest_type_description', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('activegame', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('buildings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('building_type_id', sa.Integer(), nullable=True),
    sa.Column('building_name', sa.String(length=64), nullable=True),
    sa.Column('building_description', sa.String(length=256), nullable=True),
    sa.Column('building_link', sa.String(length=256), nullable=True),
    sa.Column('base_building_cash_required', sa.Integer(), nullable=True),
    sa.Column('base_building_level_required', sa.Integer(), nullable=True),
    sa.Column('base_building_xp_required', sa.Integer(), nullable=True),
    sa.Column('base_building_wood_required', sa.Integer(), nullable=True),
    sa.Column('base_building_stone_required', sa.Integer(), nullable=True),
    sa.Column('base_building_metal_required', sa.Integer(), nullable=True),
    sa.Column('max_building_level', sa.Integer(), nullable=True),
    sa.Column('base_xp_per_minute', sa.Integer(), nullable=True),
    sa.Column('base_cash_per_minute', sa.Integer(), nullable=True),
    sa.Column('base_wood_per_minute', sa.Integer(), nullable=True),
    sa.Column('base_stone_per_minute', sa.Integer(), nullable=True),
    sa.Column('base_metal_per_minute', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['building_type_id'], ['building_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('game',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('game_name', sa.String(length=64), nullable=True),
    sa.Column('game_exists', sa.Boolean(), nullable=True),
    sa.Column('entry_date', sa.DateTime(), nullable=True),
    sa.Column('xp', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('cash', sa.Integer(), nullable=True),
    sa.Column('wood', sa.Integer(), nullable=True),
    sa.Column('stone', sa.Integer(), nullable=True),
    sa.Column('metal', sa.Integer(), nullable=True),
    sa.Column('next_level_xp_required', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inventory_name', sa.String(length=64), nullable=True),
    sa.Column('inventory_description', sa.String(length=256), nullable=True),
    sa.Column('inventory_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['inventory_type_id'], ['inventory_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quest_name', sa.String(length=64), nullable=True),
    sa.Column('quest_description', sa.String(length=256), nullable=True),
    sa.Column('quest_type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['quest_type_id'], ['quest_types.id'], name='fk_quest_type_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('building_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('building_id', sa.Integer(), nullable=True),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('building_level', sa.Integer(), nullable=True),
    sa.Column('building_active', sa.Boolean(), nullable=True),
    sa.Column('xp_per_minute', sa.Integer(), nullable=True),
    sa.Column('cash_per_minute', sa.Integer(), nullable=True),
    sa.Column('wood_per_minute', sa.Integer(), nullable=True),
    sa.Column('stone_per_minute', sa.Integer(), nullable=True),
    sa.Column('metal_per_minute', sa.Integer(), nullable=True),
    sa.Column('accrual_start_time', sa.DateTime(), nullable=True),
    sa.Column('max_accrual_duration', sa.Integer(), nullable=True),
    sa.Column('accrued_xp', sa.Integer(), nullable=True),
    sa.Column('accrued_cash', sa.Integer(), nullable=True),
    sa.Column('accrued_wood', sa.Integer(), nullable=True),
    sa.Column('accrued_stone', sa.Integer(), nullable=True),
    sa.Column('accrued_metal', sa.Integer(), nullable=True),
    sa.Column('building_completed', sa.Boolean(), nullable=True),
    sa.Column('building_completed_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['building_id'], ['buildings.id'], ),
    sa.ForeignKeyConstraint(['game_id'], ['game.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventory_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('inventory_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['game.id'], ),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventory.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quest_prequisites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=True),
    sa.Column('prequisite_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['prequisite_id'], ['quests.id'], ),
    sa.ForeignKeyConstraint(['quest_id'], ['quests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quest_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=True),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('quest_progress', sa.Integer(), nullable=True),
    sa.Column('quest_active', sa.Boolean(), nullable=True),
    sa.Column('quest_completed', sa.Boolean(), nullable=True),
    sa.Column('quest_completed_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['game.id'], ),
    sa.ForeignKeyConstraint(['quest_id'], ['quests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quest_rewards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=True),
    sa.Column('quest_reward_xp', sa.Integer(), nullable=True),
    sa.Column('quest_reward_cash', sa.Integer(), nullable=True),
    sa.Column('quest_reward_wood', sa.Integer(), nullable=True),
    sa.Column('quest_reward_stone', sa.Integer(), nullable=True),
    sa.Column('quest_reward_metal', sa.Integer(), nullable=True),
    sa.Column('quest_reward_item_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['quest_id'], ['quests.id'], ),
    sa.ForeignKeyConstraint(['quest_reward_item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resource_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('cash', sa.Integer(), nullable=True),
    sa.Column('xp', sa.Integer(), nullable=True),
    sa.Column('wood', sa.Integer(), nullable=True),
    sa.Column('stone', sa.Integer(), nullable=True),
    sa.Column('metal', sa.Integer(), nullable=True),
    sa.Column('entry_date', sa.DateTime(), nullable=True),
    sa.Column('source', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['game.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventory_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inventory_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventory_user.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reward_item_association',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reward_id', sa.Integer(), nullable=True),
    sa.Column('item_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['reward_id'], ['quest_rewards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reward_item_association')
    op.drop_table('inventory_items')
    op.drop_table('resource_log')
    op.drop_table('quest_rewards')
    op.drop_table('quest_progress')
    op.drop_table('quest_prequisites')
    op.drop_table('inventory_user')
    op.drop_table('building_progress')
    op.drop_table('user_roles')
    op.drop_table('quests')
    op.drop_table('inventory')
    op.drop_table('game')
    op.drop_table('buildings')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('roles')
    op.drop_table('quest_types')
    op.drop_table('items')
    op.drop_table('inventory_types')
    op.drop_table('building_types')
    # ### end Alembic commands ###
