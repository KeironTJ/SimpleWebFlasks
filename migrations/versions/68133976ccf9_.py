"""empty message

Revision ID: 68133976ccf9
Revises: 
Create Date: 2024-07-05 13:07:54.461564

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '68133976ccf9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('test_game_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(length=64), nullable=True),
    sa.Column('item_cost', sa.Float(), nullable=True),
    sa.Column('item_xp', sa.Integer(), nullable=True),
    sa.Column('item_level', sa.Integer(), nullable=True),
    sa.Column('item_type', sa.String(length=64), nullable=True),
    sa.Column('item_description', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_game_level_requirements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('xp_required', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_game_quest_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quest_type_name', sa.String(length=64), nullable=True),
    sa.Column('quest_type_description', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('firstname', sa.String(length=64), nullable=True),
    sa.Column('surname', sa.String(length=64), nullable=True),
    sa.Column('dob', sa.DateTime(), nullable=True),
    sa.Column('firstlineaddress', sa.String(length=64), nullable=True),
    sa.Column('city', sa.String(length=64), nullable=True),
    sa.Column('postcode', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('activetestgame', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_name', sa.String(length=64), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gtn_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('entry_date', sa.DateTime(), nullable=True),
    sa.Column('startrange', sa.Integer(), nullable=True),
    sa.Column('endrange', sa.Integer(), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('guesses', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gtn_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('startrange', sa.Integer(), nullable=True),
    sa.Column('endrange', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_game',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('game_name', sa.String(length=64), nullable=True),
    sa.Column('game_exists', sa.Boolean(), nullable=True),
    sa.Column('entry_date', sa.DateTime(), nullable=True),
    sa.Column('xp', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('cash', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_game_quests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quest_name', sa.String(length=64), nullable=True),
    sa.Column('quest_description', sa.String(length=256), nullable=True),
    sa.Column('quest_type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['quest_type_id'], ['test_game_quest_types.id'], name='quest_type_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_name', sa.String(length=64), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_game_cash_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_game_id', sa.Integer(), nullable=True),
    sa.Column('cash', sa.Float(), nullable=True),
    sa.Column('entry_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['test_game_id'], ['test_game.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_game_inventory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['test_game.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_game_rewards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=True),
    sa.Column('quest_reward_name', sa.String(length=64), nullable=True),
    sa.Column('quest_reward_description', sa.String(length=256), nullable=True),
    sa.Column('quest_reward_xp', sa.Integer(), nullable=True),
    sa.Column('quest_reward_cash', sa.Float(), nullable=True),
    sa.Column('quest_reward_item_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['quest_id'], ['test_game_quests.id'], ),
    sa.ForeignKeyConstraint(['quest_reward_item_id'], ['test_game_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_game_xp_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_game_id', sa.Integer(), nullable=True),
    sa.Column('xp', sa.Integer(), nullable=True),
    sa.Column('entry_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['test_game_id'], ['test_game.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_date', sa.DateTime(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('item_name', sa.String(length=64), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['transaction_category.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_game_inventory_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inventory_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['inventory_id'], ['test_game_inventory.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['test_game_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_game_inventory_items')
    op.drop_table('transaction')
    op.drop_table('test_game_xp_log')
    op.drop_table('test_game_rewards')
    op.drop_table('test_game_inventory')
    op.drop_table('test_game_cash_log')
    op.drop_table('user_roles')
    op.drop_table('transaction_category')
    op.drop_table('test_game_quests')
    op.drop_table('test_game')
    op.drop_table('gtn_settings')
    op.drop_table('gtn_history')
    op.drop_table('account')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('test_game_quest_types')
    op.drop_table('test_game_level_requirements')
    op.drop_table('test_game_items')
    op.drop_table('roles')
    # ### end Alembic commands ###
